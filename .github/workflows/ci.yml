# Datei: .github/workflows/ci.yml
name: Build Validation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
      # Keep fetch-depth small; we don't need full history for a build
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.14

      - name: Install Ninja
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build

      - name: Install CUDA 13.0 via NVIDIA Repo
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg lsb-release
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb
          sudo dpkg -i cuda-keyring_1.1-1_all.deb
          sudo apt-get update
          sudo apt-get install -y cuda-toolkit-13-0

      - name: Set CUDA environment
        run: |
          echo "CUDA_HOME=/usr/local/cuda-13.0" >> $GITHUB_ENV
          echo "CUDACXX=/usr/local/cuda-13.0/bin/nvcc" >> $GITHUB_ENV
          echo "/usr/local/cuda-13.0/bin" >> $GITHUB_PATH

      - name: Check CUDA version
        run: ${{ env.CUDACXX }} --version

      - name: Install system deps for OpenGL/GLFW/GLEW
        run: |
          sudo apt-get update
          sudo apt-get install -y             libxmu-dev libxi-dev libgl-dev             libxinerama-dev libxcursor-dev xorg-dev             libglu1-mesa-dev pkg-config

      - name: Clone vcpkg
        run: git clone https://github.com/microsoft/vcpkg.git

      - name: Bootstrap vcpkg
        run: ./vcpkg/bootstrap-vcpkg.sh

      - name: Configure project with vcpkg (CUDA 13, dynamic GLEW)
        run: |
          cmake -B build -G Ninja             -DCMAKE_BUILD_TYPE=Release             -DCMAKE_CXX_STANDARD=20             -DCMAKE_CUDA_COMPILER=${{ env.CUDACXX }}             -DCMAKE_CUDA_ARCHITECTURES=80\;86\;89\;90             -DCMAKE_EXPORT_COMPILE_COMMANDS=ON             -DVCPKG_TARGET_TRIPLET=x64-linux             -DCMAKE_TOOLCHAIN_FILE=$PWD/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build project
        run: cmake --build build --config Release --verbose

      - name: Install project
        run: cmake --install build --prefix ./dist

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mandelbrot-build
          path: ./dist
