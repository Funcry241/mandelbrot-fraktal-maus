///// Otter: Klammern fuer () und [] sowie Space; sicheres Rendering von "FPS (max)"; ASCII-only.
///// Schneefuchs: Explizite Glyph-Initialisierung mit Glyph{...}; MSVC /permissive- fix; /WX-fest.
///// Maus: Kompakte, direkte Glyph-Zuordnung; Fallback-Glyph all-zero; Header-only Hilfsfunktionen.
///// Datei: src/warzenschwein_fontdata.hpp

#pragma once
#include <unordered_map>
#include <array>
#include <string>
#include <cstdint>
#include <cstdio>

namespace WarzenschweinFont {

using Glyph = std::array<std::uint8_t, 12>;

// Achtung MSVC: bei std::pair braced-init ohne Typ fuehrt leicht zu C2440.
// Deshalb immer: { 'X', Glyph{ ... } } statt { 'X', { ... } }.
inline const std::unordered_map<char, Glyph> font = {
    { ' ', Glyph{ 0,0,0,0,0,0,0,0,0,0,0,0 } },
    { '(', Glyph{ 0,0,24,48,96,96,96,96,48,24,0,0 } },
    { ')', Glyph{ 0,0,24,12,6,6,6,6,12,24,0,0 } },
    { '[', Glyph{ 0,0,124,96,96,96,96,96,96,124,0,0 } },
    { ']', Glyph{ 0,0,124,12,12,12,12,12,12,124,0,0 } },

    { 'A', Glyph{ 0,0,24,36,66,126,66,66,0,0,0,0 } },
    { 'B', Glyph{ 0,0,124,66,124,66,66,124,0,0,0,0 } },
    { 'C', Glyph{ 0,0,60,66,64,64,66,60,0,0,0,0 } },
    { 'D', Glyph{ 0,0,120,68,66,66,68,120,0,0,0,0 } },
    { 'E', Glyph{ 0,0,126,64,120,64,64,126,0,0,0,0 } },
    { 'F', Glyph{ 0,0,126,64,120,64,64,64,0,0,0,0 } },
    { 'G', Glyph{ 0,0,60,64,64,78,66,60,0,0,0,0 } },
    { 'H', Glyph{ 0,0,66,66,126,66,66,66,0,0,0,0 } },
    { 'I', Glyph{ 0,0,124,16,16,16,16,124,0,0,0,0 } },
    { 'J', Glyph{ 0,0,30,4,4,4,68,56,0,0,0,0 } },
    { 'K', Glyph{ 0,0,66,68,72,112,72,68,0,0,0,0 } },
    { 'L', Glyph{ 0,0,64,64,64,64,64,126,0,0,0,0 } },
    { 'M', Glyph{ 0,0,66,102,90,66,66,66,0,0,0,0 } },
    { 'N', Glyph{ 0,0,66,98,82,74,70,66,0,0,0,0 } },
    { 'O', Glyph{ 0,0,60,66,66,66,66,60,0,0,0,0 } },
    { 'P', Glyph{ 0,0,124,66,66,124,64,64,0,0,0,0 } },
    { 'Q', Glyph{ 0,0,60,66,66,74,68,58,0,0,0,0 } },
    { 'R', Glyph{ 0,0,124,66,66,124,72,68,0,0,0,0 } },
    { 'S', Glyph{ 0,0,60,64,60,2,66,60,0,0,0,0 } },
    { 'T', Glyph{ 0,0,124,16,16,16,16,16,0,0,0,0 } },
    { 'U', Glyph{ 0,0,66,66,66,66,66,60,0,0,0,0 } },
    { 'V', Glyph{ 0,0,66,66,66,66,36,24,0,0,0,0 } },
    { 'W', Glyph{ 0,0,66,66,66,90,90,36,0,0,0,0 } },
    { 'X', Glyph{ 0,0,66,36,24,24,36,66,0,0,0,0 } },
    { 'Y', Glyph{ 0,0,66,36,24,16,16,16,0,0,0,0 } },
    { 'Z', Glyph{ 0,0,126,4,8,16,32,126,0,0,0,0 } },

    { 'a', Glyph{ 0,0,60,2,62,66,66,62,0,0,0,0 } },
    { 'b', Glyph{ 0,0,64,64,92,98,66,124,0,0,0,0 } },
    { 'c', Glyph{ 0,0,60,66,64,64,66,60,0,0,0,0 } },
    { 'd', Glyph{ 0,0,2,2,62,66,66,62,0,0,0,0 } },
    { 'e', Glyph{ 0,0,60,66,126,64,66,60,0,0,0,0 } },
    { 'f', Glyph{ 0,0,28,32,124,32,32,32,0,0,0,0 } },
    { 'g', Glyph{ 0,0,62,66,66,62,2,60,0,0,0,0 } },
    { 'h', Glyph{ 0,0,64,64,92,98,66,66,0,0,0,0 } },
    { 'i', Glyph{ 0,0,16,0,48,16,16,56,0,0,0,0 } },
    { 'j', Glyph{ 0,0,4,0,12,4,4,68,56,0,0,0 } },
    { 'k', Glyph{ 0,0,64,72,80,96,80,72,0,0,0,0 } },
    { 'l', Glyph{ 0,0,48,16,16,16,16,56,0,0,0,0 } },
    { 'm', Glyph{ 0,0,108,82,82,82,82,82,0,0,0,0 } },
    { 'n', Glyph{ 0,0,92,98,66,66,66,66,0,0,0,0 } },
    { 'o', Glyph{ 0,0,60,66,66,66,66,60,0,0,0,0 } },
    { 'p', Glyph{ 0,0,124,66,66,124,64,64,0,0,0,0 } },
    { 'q', Glyph{ 0,0,62,66,66,62,2,2,0,0,0,0 } },
    { 'r', Glyph{ 0,0,92,98,64,64,64,64,0,0,0,0 } },
    { 's', Glyph{ 0,0,62,64,60,2,2,124,0,0,0,0 } },
    { 't', Glyph{ 0,0,32,32,124,32,32,30,0,0,0,0 } },
    { 'u', Glyph{ 0,0,66,66,66,66,70,58,0,0,0,0 } },
    { 'v', Glyph{ 0,0,66,66,66,36,36,24,0,0,0,0 } },
    { 'w', Glyph{ 0,0,66,66,82,82,92,40,0,0,0,0 } },
    { 'x', Glyph{ 0,0,66,36,24,24,36,66,0,0,0,0 } },
    { 'y', Glyph{ 0,0,66,66,66,62,2,60,0,0,0,0 } },
    { 'z', Glyph{ 0,0,126,4,8,16,32,126,0,0,0,0 } },

    { '0', Glyph{ 60,66,70,74,82,98,66,60,0,0,0,0 } },
    { '1', Glyph{ 16,48,80,16,16,16,16,124,0,0,0,0 } },
    { '2', Glyph{ 60,66,2,4,8,16,32,126,0,0,0,0 } },
    { '3', Glyph{ 60,66,2,28,2,2,66,60,0,0,0,0 } },
    { '4', Glyph{ 4,12,20,36,68,126,4,4,0,0,0,0 } },
    { '5', Glyph{ 126,64,64,124,2,2,66,60,0,0,0,0 } },
    { '6', Glyph{ 60,64,64,124,66,66,66,60,0,0,0,0 } },
    { '7', Glyph{ 126,2,4,8,16,32,32,32,0,0,0,0 } },
    { '8', Glyph{ 60,66,66,60,66,66,66,60,0,0,0,0 } },
    { '9', Glyph{ 60,66,66,66,62,2,2,60,0,0,0,0 } },

    { '.', Glyph{ 0,0,0,0,0,0,0,16,16,0,0,0 } },
    { ',', Glyph{ 0,0,0,0,0,0,0,16,16,32,0,0 } },
    { '-', Glyph{ 0,0,0,0,0,124,0,0,0,0,0,0 } },
    { '+', Glyph{ 0,0,0,16,16,124,16,16,0,0,0,0 } }
};

inline const Glyph& get(char c) {
    static const Glyph empty{}; // all zeros
    const auto it = font.find(c);
    return (it != font.end()) ? it->second : empty;
}

} // namespace WarzenschweinFont
