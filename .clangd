# Datei: .clangd
# Zeilen: 37
# üê≠ Maus-Kommentar: Waschb√§r-Kernversion: Clangd akzeptiert CUDA-Quelltexte ohne libdevice. Kein "If", keine Aliase. Nur direkte CompileFlags. Ziel: LSP-Stabilit√§t f√ºr .cu und .cpp gleicherma√üen.

CompileFlags:
  Add: 
    - -std=c++23
    - -xc++                      # Quelltext als C++ behandeln
    - -fsyntax-only             # Nur Analyse, keine Kompilierung
    - --cuda-path="C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.9"
    - -nocudainc                # Header selbst angeben
    - -nocudalib                # libdevice-Fehler verhindern
    - --cuda-gpu-arch=sm_89     # Dummy-Architektur f√ºr LSP
    - -I"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.9/include"
    - -I"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.9/include/crt"
    - -I"${workspaceFolder}/vcpkg_installed/x64-windows/include"
    - -I"${workspaceFolder}/src"
    - -I"${workspaceFolder}/include"

Diagnostics:
  UnusedIncludes: true
  ClangTidy:
    Add:
      - bugprone-*
      - performance-*
      - modernize-*
      - readability-identifier-naming
      - cppcoreguidelines-*

Index:
  Background: Build
  StandardLibrary: Yes

Hover:
  ShowAKA: true

Completion:
  AllScopes: true

InlayHints:
  Enabled: true
  ParameterNames: true
  DeducedTypes: true
